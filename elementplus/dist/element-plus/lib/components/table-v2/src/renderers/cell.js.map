{"version":3,"file":"cell.js","sources":["../../../../../../../packages/components/table-v2/src/renderers/cell.tsx"],"sourcesContent":["import { get } from 'lodash-unified'\nimport { isFunction, isObject } from '@element-plus/utils'\nimport { ExpandIcon, TableCell } from '../components'\nimport { Alignment } from '../constants'\nimport { placeholderSign } from '../private'\nimport { componentToSlot, enforceUnit } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs, VNode } from 'vue'\nimport type { CellRendererParams } from '../types'\nimport type { TableV2RowCellRenderParam } from '../components'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\n\ntype CellRendererProps = TableV2RowCellRenderParam &\n  Pick<\n    TableV2Props,\n    'cellProps' | 'expandColumnKey' | 'indentSize' | 'iconSize' | 'rowKey'\n  > &\n  UnwrapNestedRefs<Pick<UseTableReturn, 'expandedRowKeys'>> & {\n    ns: UseNamespaceReturn\n  }\n\nconst CellRenderer: FunctionalComponent<CellRendererProps> = (\n  {\n    // renderer props\n    columns,\n    column,\n    columnIndex,\n    depth,\n    expandIconProps,\n    isScrolling,\n    rowData,\n    rowIndex,\n    // from use-table\n    style,\n    expandedRowKeys,\n    ns,\n    // derived props\n    expandColumnKey,\n    indentSize,\n    iconSize,\n    rowKey,\n  },\n  { slots }\n) => {\n  const cellStyle = enforceUnit(style)\n\n  if (column.placeholderSign === placeholderSign) {\n    return <div class={ns.em('row-cell', 'placeholder')} style={cellStyle} />\n  }\n  const { cellRenderer, dataKey, dataGetter } = column\n\n  const columnCellRenderer = componentToSlot(cellRenderer)\n\n  const CellComponent =\n    columnCellRenderer ||\n    slots.default ||\n    ((props: CellRendererParams<any>) => <TableCell {...props} />)\n\n  const cellData = isFunction(dataGetter)\n    ? dataGetter({ columns, column, columnIndex, rowData, rowIndex })\n    : get(rowData, dataKey ?? '')\n\n  const cellProps = {\n    class: ns.e('cell-text'),\n    columns,\n    column,\n    columnIndex,\n    cellData,\n    isScrolling,\n    rowData,\n    rowIndex,\n  }\n\n  const Cell = CellComponent(cellProps)\n\n  const kls = [\n    ns.e('row-cell'),\n    column.align === Alignment.CENTER && ns.is('align-center'),\n    column.align === Alignment.RIGHT && ns.is('align-right'),\n  ]\n\n  const expandable = rowIndex >= 0 && column.key === expandColumnKey\n  const expanded = rowIndex >= 0 && expandedRowKeys.includes(rowData[rowKey])\n\n  let IconOrPlaceholder: VNode | undefined\n  const iconStyle = `margin-inline-start: ${depth * indentSize}px;`\n  if (expandable) {\n    if (isObject(expandIconProps)) {\n      IconOrPlaceholder = (\n        <ExpandIcon\n          {...expandIconProps}\n          class={[ns.e('expand-icon'), ns.is('expanded', expanded)]}\n          size={iconSize}\n          expanded={expanded}\n          style={iconStyle}\n          expandable\n        />\n      )\n    } else {\n      IconOrPlaceholder = (\n        <div\n          style={[\n            iconStyle,\n            `width: ${iconSize}px; height: ${iconSize}px;`,\n          ].join(' ')}\n        />\n      )\n    }\n  }\n\n  return (\n    <div class={kls} style={cellStyle}>\n      {IconOrPlaceholder}\n      {Cell}\n    </div>\n  )\n}\n\nCellRenderer.inheritAttrs = false\n\nexport default CellRenderer\n"],"names":["CellRenderer","columns","column","columnIndex","depth","expandIconProps","isScrolling","rowData","rowIndex","style","expandedRowKeys","ns","expandColumnKey","indentSize","iconSize","rowKey","placeholderSign","slots","cellStyle","_createVNode","TableCell","cellRenderer","isFunction","dataKey","dataGetter","get","default","cellData","class","Alignment","isObject","ExpandIcon","_mergeProps","kls","e","align","expandable","expanded","iconStyle","IconOrPlaceholder"],"mappings":"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"}